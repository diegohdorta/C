package cg3dviewer;

import java.awt.Graphics;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author diegodorta
 */
public class Viewer extends javax.swing.JFrame {

    // Leitura do arquivo
    private File file;
    private static JFileChooser fileChooser = new JFileChooser();
    private static FileFilter filter;
    private BufferedReader buffer;
    
    // Listas de entrada
    private ArrayList<Point> pointList;
    private ArrayList<Point> pointFinal;
    private ArrayList<Row> rowList;
    
    // X Y Z Observador
    private double obsX;
    private double obsY;
    private double obsZ;
    
    // Foco eixo Z
    private double xc;
    private double yc;
    private double zc;
    
    private double d;
    
    private Matrix matrix;
    private Calculus calc;
    
    /**
     * Creates new form Viewer
     */
    public Viewer() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgroup = new javax.swing.ButtonGroup();
        panel = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        tfObX = new java.awt.TextField();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        tfObY = new java.awt.TextField();
        label4 = new java.awt.Label();
        tfObZ = new java.awt.TextField();
        label5 = new java.awt.Label();
        tfXc = new java.awt.TextField();
        label6 = new java.awt.Label();
        tfYc = new java.awt.TextField();
        label7 = new java.awt.Label();
        tfZc = new java.awt.TextField();
        lbDistance = new java.awt.Label();
        lbFile = new java.awt.Label();
        btnRound = new javax.swing.JButton();
        btnDraw = new javax.swing.JButton();
        rbX = new javax.swing.JRadioButton();
        rbY = new javax.swing.JRadioButton();
        rbZ = new javax.swing.JRadioButton();
        jSliderSpeed = new javax.swing.JSlider();
        lbSpeed = new javax.swing.JLabel();
        jSliderDistance = new javax.swing.JSlider();
        btnClean = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemOpen = new javax.swing.JMenuItem();
        jMenuItemExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(900, 700));
        setResizable(false);

        panel.setBackground(new java.awt.Color(0, 0, 0));
        panel.setRequestFocusEnabled(false);

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        label1.setText("Observer.:");

        tfObX.setName("tfObX"); // NOI18N
        tfObX.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                tfObXTextValueChanged(evt);
            }
        });

        label2.setText("X.:");

        label3.setText("Y.:");

        tfObY.setName("tfObY"); // NOI18N
        tfObY.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                tfObYTextValueChanged(evt);
            }
        });

        label4.setText("Z.:");

        tfObZ.setName("tfObZ"); // NOI18N
        tfObZ.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                tfObZTextValueChanged(evt);
            }
        });

        label5.setText("Zx.:");

        tfXc.setName("tfXc"); // NOI18N
        tfXc.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                tfXcTextValueChanged(evt);
            }
        });

        label6.setText("Zy.:");

        tfYc.setName("tfYc"); // NOI18N
        tfYc.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                tfYcTextValueChanged(evt);
            }
        });

        label7.setText("Zz.:");

        tfZc.setName(""); // NOI18N
        tfZc.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                tfZcTextValueChanged(evt);
            }
        });

        lbDistance.setText("D.:");

        lbFile.setText("File.:");

        btnRound.setText("Round");
        btnRound.setToolTipText("");
        btnRound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRoundActionPerformed(evt);
            }
        });

        btnDraw.setText("Draw");
        btnDraw.setToolTipText("");
        btnDraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDrawActionPerformed(evt);
            }
        });

        bgroup.add(rbX);
        rbX.setSelected(true);
        rbX.setText("X");

        bgroup.add(rbY);
        rbY.setText("Y");

        bgroup.add(rbZ);
        rbZ.setText("Z");

        jSliderSpeed.setMinimum(10);
        jSliderSpeed.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderSpeedStateChanged(evt);
            }
        });

        lbSpeed.setText("Speed.:");

        jSliderDistance.setMaximum(400);
        jSliderDistance.setMinimum(1);
        jSliderDistance.setValue(30);
        jSliderDistance.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderDistanceStateChanged(evt);
            }
        });

        btnClean.setText("Clean");
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });

        jMenuFile.setText("File");

        jMenuItemOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemOpen.setText("Open");
        jMenuItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemOpen);

        jMenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExit);

        jMenuBar1.add(jMenuFile);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbFile, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tfObX, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tfXc, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tfObY, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tfYc, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfZc, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfObZ, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbDistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(btnRound)
                                .addGap(32, 32, 32)
                                .addComponent(btnDraw))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rbX)
                                .addGap(18, 18, 18)
                                .addComponent(rbY)
                                .addGap(18, 18, 18)
                                .addComponent(rbZ))
                            .addComponent(jSliderSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbSpeed)
                            .addComponent(jSliderDistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnClean)
                        .addGap(71, 71, 71))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6))
                    .addComponent(lbFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfObX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfObZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfObY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfYc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfXc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfZc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbDistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSliderDistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbX)
                            .addComponent(rbY)
                            .addComponent(rbZ))
                        .addGap(10, 10, 10)
                        .addComponent(lbSpeed)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSliderSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRound)
                            .addComponent(btnDraw))
                        .addGap(32, 32, 32)
                        .addComponent(btnClean))
                    .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tfObX.getAccessibleContext().setAccessibleName("");
        label3.getAccessibleContext().setAccessibleName("labelObY");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenActionPerformed

        pointList = new ArrayList();
        rowList = new ArrayList();
        
        if(fileChooser.showOpenDialog(jMenuItemOpen) == JFileChooser.APPROVE_OPTION) {
            file = fileChooser.getSelectedFile();
        }
        
        if(file != null) {
            lbFile.setText("File.: " + file.getAbsolutePath());
            splitLine(file);
        }
    }//GEN-LAST:event_jMenuItemOpenActionPerformed

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        
        System.exit(Viewer.EXIT_ON_CLOSE);
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void tfXcTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_tfXcTextValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tfXcTextValueChanged

    private void tfYcTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_tfYcTextValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tfYcTextValueChanged

    private void tfZcTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_tfZcTextValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tfZcTextValueChanged

    private void tfObXTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_tfObXTextValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tfObXTextValueChanged

    private void tfObYTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_tfObYTextValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tfObYTextValueChanged

    private void tfObZTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_tfObZTextValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tfObZTextValueChanged

    private void jSliderSpeedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderSpeedStateChanged
        lbSpeed.setText("Speed.: " + jSliderSpeed.getValue());
    }//GEN-LAST:event_jSliderSpeedStateChanged

    private void btnDrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDrawActionPerformed
        
        // Get observer information
        d = jSliderDistance.getValue();
        obsX = Double.parseDouble(tfObX.getText().toString());
        obsY = Double.parseDouble(tfObY.getText().toString());
        obsZ = Double.parseDouble(tfObZ.getText().toString());
        xc = Double.parseDouble(tfXc.getText().toString());
        yc = Double.parseDouble(tfYc.getText().toString());
        zc = Double.parseDouble(tfZc.getText().toString());
        
        pointFinal = new ArrayList();
        
        calcTransformationPoint();
        drawRows();
    }//GEN-LAST:event_btnDrawActionPerformed

    private void btnRoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRoundActionPerformed
        double[][] m = new double[1][4];
        double[][] mr = new double[4][4];
        int i;
        
        matrix = new Matrix();
        calc = new Calculus();
        
        // Get observer information
        d = jSliderDistance.getValue();
        obsX = Double.parseDouble(tfObX.getText().toString());
        obsY = Double.parseDouble(tfObY.getText().toString());
        obsZ = Double.parseDouble(tfObZ.getText().toString());
        xc = Double.parseDouble(tfXc.getText().toString());
        yc = Double.parseDouble(tfYc.getText().toString());
        zc = Double.parseDouble(tfZc.getText().toString());
        
        for(i = 0; i < 720; i++) {
            pointFinal = new ArrayList();
            
            m[0][0] = obsX;
            m[0][1] = obsY;
            m[0][2] = obsZ;
            m[0][3] = 1;
            
            if(rbX.isSelected() == true) {
                mr = matrix.rotationMatrixX(0.01745, 0.99985);
            } else if(rbY.isSelected() == true) {
                mr = matrix.rotationMatrixY(0.01745, 0.99985);
            } else {
                mr = matrix.rotationMatrixZ(0.01745, 0.99985);
            }
            
            m = calc.matrix4x4Multiplies(m, mr);
            
            obsX = m[0][0];
            obsY = m[0][1];
            obsZ = m[0][2];
            
            calcTransformationPoint();
            drawRows();
            
            try {
                Thread.sleep(jSliderSpeed.getMaximum() - (jSliderSpeed.getValue() - jSliderSpeed.getMinimum()));
            } catch (InterruptedException ex) {
                Logger.getLogger(Viewer.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnRoundActionPerformed

    private void jSliderDistanceStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderDistanceStateChanged
        lbDistance.setText("D.: " + jSliderDistance.getValue());
        
        pointFinal = new ArrayList();
        
        // Get observer information
        d = jSliderDistance.getValue();
        obsX = Double.parseDouble(tfObX.getText().toString());
        obsY = Double.parseDouble(tfObY.getText().toString());
        obsZ = Double.parseDouble(tfObZ.getText().toString());
        xc = Double.parseDouble(tfXc.getText().toString());
        yc = Double.parseDouble(tfYc.getText().toString());
        zc = Double.parseDouble(tfZc.getText().toString());
        
        calcTransformationPoint();
        drawRows();
    }//GEN-LAST:event_jSliderDistanceStateChanged

    private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        panel.repaint();
    }//GEN-LAST:event_btnCleanActionPerformed

    public void calcTransformationPoint() {
        double m1[][], m2[][], m3[][], m4[][], m5[][], m6[][], m7[][];
        double mr[][];
        double pointResult[][] = new double[1][4];
        
        matrix = new Matrix();
        calc = new Calculus();
        
        // Define matrices 
        m1 = matrix.translationMatrix(-obsX, -obsY, -obsZ);
        m2 = matrix.rotationMatrixX(-1, 0);
        m3 = matrix.rotationMatrixY(calc.getSenCos(obsX, calc.hypotenuse(obsX, obsY)), calc.getSenCos(obsY, calc.hypotenuse(obsX, obsY)));
        m4 = matrix.rotationMatrixX(calc.getSenCos(obsZ, calc.hypotenuse(calc.hypotenuse(obsX, obsY), obsZ)), calc.getSenCos(calc.hypotenuse(obsX, obsY), calc.hypotenuse(calc.hypotenuse(obsX, obsY), obsZ)));
        m5 = matrix.scaleMatrix(1, 1, -1);
        m6 = matrix.translationMatrix(xc, yc, zc);
        m7 = matrix.clippingMatrix(d, panel.getWidth()/20/2);
        
        // Multiply matrices
        mr = calc.matrix4x4Multiplies(m1, m2);
        mr = calc.matrix4x4Multiplies(mr, m3);
        mr = calc.matrix4x4Multiplies(mr, m4);
        mr = calc.matrix4x4Multiplies(mr, m5);
        mr = calc.matrix4x4Multiplies(mr, m6);
        mr = calc.matrix4x4Multiplies(mr, m7);
        
        for(Point p: pointList) {
            matrix.setPoint(p.getX(), p.getY(), p.getZ());
            
            pointResult = calc.matrix4x4Multiplies(matrix.getPoint(), mr);
            
            pointFinal.add(new Point(p.getId(), 
                    calc.getXs(pointResult[0][0], pointResult[0][2], panel.getWidth()/2, panel.getWidth()/2), 
                    calc.getYs(pointResult[0][1], pointResult[0][2], panel.getWidth()/2, panel.getWidth()/2), 
                    pointResult[0][2]));
        }
    }
    
    public void drawRows() {
        Graphics graphics = panel.getGraphics();
        panel.update(graphics);
        Point pi, pj;
        
        for(Row r: rowList) {
            graphics.setColor(r.getColor());
            pi = findFinalPoint(r.getPi());
            pj = findFinalPoint(r.getPj());
            graphics.drawLine((int)Math.round(pi.getX()), (int)Math.round(pi.getY()), (int)Math.round(pj.getX()), (int)Math.round(pj.getY()));
        }
    }
    
    public void init() {
        tfObX.setText("15");
        tfObY.setText("15");
        tfObZ.setText("15");
        tfXc.setText("0");
        tfYc.setText("0");
        tfZc.setText("0");
        lbDistance.setText("D.: " + jSliderDistance.getValue());
        lbSpeed.setText("Speed.: " + jSliderSpeed.getValue());
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Viewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Viewer().setVisible(true);
            }
        });
        
        filter = new ExtensionFileFilter("Documento de Texto", new String[] {"TXT"});
        fileChooser.setFileFilter(filter);
    }

    public void splitLine(File file){
        
        BufferedReader buffer;
        String line;
        String id;
        Double x, y, z;
        String i;
        String j;
        
        try {
            buffer = new BufferedReader(new FileReader(file));
            while((line = buffer.readLine()) != null) {
                
                
                // If it's reading points section
                if(line.startsWith("p")) {
                    StringTokenizer sToken = new StringTokenizer(line);
                    
                    id = sToken.nextToken();
                    x = Double.parseDouble(sToken.nextToken());
                    y = Double.parseDouble(sToken.nextToken());
                    z = Double.parseDouble(sToken.nextToken());
                    pointList.add(new Point(id, x, y, z));
                }
                // If it's reading rows section
                if(line.startsWith("C")) { 
                     StringTokenizer sToken2 = new StringTokenizer(line, ",");
                     while (sToken2.hasMoreElements()) {
                        StringTokenizer sToken3 = new StringTokenizer(sToken2.nextToken());
                        id = sToken3.nextToken();
                        i = sToken3.nextToken();
                        j = sToken3.nextToken();
                        rowList.add(new Row(id, i, j));
                     }
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(Viewer.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        for(Point p: pointList) {
            System.out.println(p.getId() + " " + p.getX() + " " + p.getY() + " " + p.getZ());
        }
        
        for(Row r: rowList) {
            
            System.out.println(r.getId() + " " + r.getPi() + " " + r.getPj());
        }
    }
    
    public Point findPoint(String p) {
        
        int i;
        
        for(i = 0; i < pointList.size(); i++) {
            if(pointList.get(i).getId().compareTo(p) == 0) {
                return pointList.get(i);
            }
        }
        
        return null;
    }
    
    public Point findFinalPoint(String p) {
        
        int i;
        
        for(i = 0; i < pointFinal.size(); i++) {
            if(pointFinal.get(i).getId().compareTo(p) == 0) {
                return pointFinal.get(i);
            }
        }
        
        return null;
    }
    
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgroup;
    private javax.swing.JButton btnClean;
    private javax.swing.JButton btnDraw;
    private javax.swing.JButton btnRound;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemOpen;
    private javax.swing.JSlider jSliderDistance;
    private javax.swing.JSlider jSliderSpeed;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Label label7;
    private java.awt.Label lbDistance;
    private java.awt.Label lbFile;
    private javax.swing.JLabel lbSpeed;
    private javax.swing.JPanel panel;
    private javax.swing.JRadioButton rbX;
    private javax.swing.JRadioButton rbY;
    private javax.swing.JRadioButton rbZ;
    private java.awt.TextField tfObX;
    private java.awt.TextField tfObY;
    private java.awt.TextField tfObZ;
    private java.awt.TextField tfXc;
    private java.awt.TextField tfYc;
    private java.awt.TextField tfZc;
    // End of variables declaration//GEN-END:variables
}
